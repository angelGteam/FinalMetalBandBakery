//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MetalBandBakey.Infra.WCFStockServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFStockServices.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckStock", ReplyAction="http://tempuri.org/IService/CheckStockResponse")]
        int CheckStock(string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckStock", ReplyAction="http://tempuri.org/IService/CheckStockResponse")]
        System.Threading.Tasks.Task<int> CheckStockAsync(string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReduceStock", ReplyAction="http://tempuri.org/IService/ReduceStockResponse")]
        bool ReduceStock(string itemId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReduceStock", ReplyAction="http://tempuri.org/IService/ReduceStockResponse")]
        System.Threading.Tasks.Task<bool> ReduceStockAsync(string itemId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IncreaseStock", ReplyAction="http://tempuri.org/IService/IncreaseStockResponse")]
        void IncreaseStock(string itemId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IncreaseStock", ReplyAction="http://tempuri.org/IService/IncreaseStockResponse")]
        System.Threading.Tasks.Task IncreaseStockAsync(string itemId, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckCompleteStock", ReplyAction="http://tempuri.org/IService/CheckCompleteStockResponse")]
        System.Collections.Generic.List<ItemStock> CheckCompleteStock();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckCompleteStock", ReplyAction="http://tempuri.org/IService/CheckCompleteStockResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ItemStock>> CheckCompleteStockAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : MetalBandBakey.Infra.WCFStockServices.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<MetalBandBakey.Infra.WCFStockServices.IService>, MetalBandBakey.Infra.WCFStockServices.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CheckStock(string itemId) {
            return base.Channel.CheckStock(itemId);
        }
        
        public System.Threading.Tasks.Task<int> CheckStockAsync(string itemId) {
            return base.Channel.CheckStockAsync(itemId);
        }
        
        public bool ReduceStock(string itemId, int quantity) {
            return base.Channel.ReduceStock(itemId, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> ReduceStockAsync(string itemId, int quantity) {
            return base.Channel.ReduceStockAsync(itemId, quantity);
        }
        
        public void IncreaseStock(string itemId, int quantity) {
            base.Channel.IncreaseStock(itemId, quantity);
        }
        
        public System.Threading.Tasks.Task IncreaseStockAsync(string itemId, int quantity) {
            return base.Channel.IncreaseStockAsync(itemId, quantity);
        }
        
        public System.Collections.Generic.List<ItemStock> CheckCompleteStock() {
            return base.Channel.CheckCompleteStock();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ItemStock>> CheckCompleteStockAsync() {
            return base.Channel.CheckCompleteStockAsync();
        }
    }
}
